// fibonacci number by recursion

#include<bits/stdc++.h>
using namespace std;
int fib(int n)
{
    if(n<=1)
    return n;
    int last = fib(n-1);
    int slast = fib(n-2);
    return last+slast;
}
int main()
{
    int n;
    cin>>n;
    for(int i=1;i<=n;i++)
    cout<<fib(i)<<" ";
    return 0;
}


// reverse of array
#include<bits/stdc++.h>
using namespace std;
void reverse(int arr[],int i,int n)
{
   if(i>=n/2)
   return;
   swap(arr[i],arr[n-1-i]);
   i++;
   reverse(arr,i,n);
}
int main()
{
    int n;
    cin>>n;
    int arr[n];
    for(int i=0;i<n;i++)
    {
        cin>>arr[i];
    }
    reverse(arr,0,n);
    for(int i=0;i<n;i++)
    {
        cout<<arr[i]<<" ";
    }
    return 0;
}

// reverse of array
#include<bits/stdc++.h>
using namespace std;
void reverse(int arr[],int i,int n)
{
   if(i>=n)
   return;
   swap(arr[i],arr[n--]);
   i++;
   reverse(arr,i,n);
}
int main()
{
    int n;
    cin>>n;
    int arr[n];
    for(int i=0;i<n;i++)
    {
        cin>>arr[i];
    }
    reverse(arr,0,n-1);
    for(int i=0;i<n;i++)
    {
        cout<<arr[i]<<" ";
    }
    return 0;
}
